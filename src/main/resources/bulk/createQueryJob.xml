<!--
 ~  Copyright (c) 2025, WSO2 LLC. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 LLC. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="createQueryJob">
    <parameter name="operation" description="operation"/>
    <parameter name="query" description="SOQL query"/>
    <parameter name="contentType" description="contentType"/>
    <parameter name="columnDelimiter" description="columnDelimiter"/>
    <parameter name="lineEnding" description="lineEnding"/>
    <sequence>
        <class name="org.wso2.carbon.salesforce.connector.RestURLBuilder">
            <property name="resourcePath" value="/services/data/{$version}/jobs/query"/>
        </class>
        <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
        <property name="messageType" value="application/json" scope="axis2"/>
        <property name="ContentType" value="application/json" scope="axis2"/>
        <payloadFactory media-type="json" template-type="freemarker">
            <format><![CDATA[{
                "operation": "${args.arg1}",
                "query": "${args.arg2}",
                "contentType": "${args.arg3}",
                "columnDelimiter": "${args.arg4}",
                "lineEnding": "${args.arg5}"
            }]]></format>
            <args>
                <arg evaluator="xml" expression="$func:operation"/>
                <arg evaluator="xml" expression="$func:query"/>
                <arg evaluator="xml" expression="$func:contentType"/>
                <arg evaluator="xml" expression="$func:columnDelimiter"/>
                <arg evaluator="xml" expression="$func:lineEnding"/>
            </args>
        </payloadFactory>
        <header name="Authorization" scope="transport"
                expression="fn:concat('Bearer ', get-property('_OH_INTERNAL_ACCESS_TOKEN_'))"/>
        <header name="Accept" scope="transport" value="application/json" action="set"/>
        <call>
            <endpoint>
                <http method="POST" uri-template="{uri.var.apiUrl}{+uri.var.resourcePath}"/>
            </endpoint>
        </call>
    </sequence>
</template>

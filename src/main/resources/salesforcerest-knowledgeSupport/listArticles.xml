<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2023, WSO2 LLC (http://www.wso2.com) All Rights Reserved.

   WSO2 LLC licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="listArticles" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="queryString" description="The query string to perform an SOSL search."/>
    <parameter name="channel" description="The value of the channel. Defaults to user’s context"/>
    <parameter name="categories" description="The data categories in map json format with a limit of three data category conditions. Ex: {“group1”:”category1”,”group2”:”category2”,...}"/>
    <parameter name="queryMethod" description="AT, BELOW, ABOVE, ABOVE_OR_BELOW. Only valid when categories are specified. Defaults to ABOVE_OR_BELOW."/>
    <parameter name="sort" description="A sortable field name LastPublishedDate, CreatedDate, Title, ViewScore. Defaults to LastPublishedDate for query and relevance for search."/>
    <parameter name="order" description="Either ASC or DESC, defaults to DESC. Valid only when sort is valid."/>
    <parameter name="pageSize" description="Defaults to 20. Valid range 1 to 100."/>
    <parameter name="pageNumber" description="The page number. Defaults to 1."/>
    <parameter name="responseVariable" description="The name of the variable to which the response should be stored."/>
    <parameter name="overwriteBody" description="Replace the Message Body in Message Context with the response of the operation."/>
    <sequence>
        <property name="queryParams" value=""/>
        <filter source="boolean($func:queryString)" regex="true">
            <then>
                <property name="queryParams" expression="fn:concat($ctx:queryParams, '&amp;', 'queryString=', $func:queryString)"/>
            </then>
            <else/>
        </filter>
        <filter source="boolean($func:channel)" regex="true">
            <then>
                <property name="queryParams" expression="fn:concat($ctx:queryParams, '&amp;', 'channel=', $func:channel)"/>
            </then>
            <else/>
        </filter>
        <filter source="boolean($func:categories)" regex="true">
            <then>
                <property name="queryParams" expression="fn:concat($ctx:queryParams, '&amp;', 'categories=', $func:categories)"/>
            </then>
            <else/>
        </filter>
        <filter source="boolean($func:queryMethod)" regex="true">
            <then>
                <property name="queryParams" expression="fn:concat($ctx:queryParams, '&amp;', 'queryMethod=', $func:queryMethod)"/>
            </then>
            <else/>
        </filter>
        <filter source="boolean($func:sort)" regex="true">
            <then>
                <property name="queryParams" expression="fn:concat($ctx:queryParams, '&amp;', 'sort=', $func:sort)"/>
            </then>
            <else/>
        </filter>
        <filter source="boolean($func:order)" regex="true">
            <then>
                <property name="queryParams" expression="fn:concat($ctx:queryParams, '&amp;', 'order=', $func:order)"/>
            </then>
            <else/>
        </filter>
        <filter source="boolean($func:pageSize)" regex="true">
            <then>
                <property name="queryParams" expression="fn:concat($ctx:queryParams, '&amp;', 'pageSize=', $func:pageSize)"/>
            </then>
            <else/>
        </filter>
        <filter source="boolean($func:pageNumber)" regex="true">
            <then>
                <property name="queryParams" expression="fn:concat($ctx:queryParams, '&amp;', 'pageNumber=', $func:pageNumber)"/>
            </then>
            <else/>
        </filter>
        <filter source="boolean($ctx:queryParams)" regex="false">
            <then>
                <property name="uri.var.callEndpointUri" expression="fn:concat($ctx:uri.var.apiUrl, '/services/data/', $ctx:uri.var.apiVersion,'/support/knowledgeArticles')"/>
            </then>
            <else>
                <property name="uri.var.callEndpointUri" expression="fn:concat($ctx:uri.var.apiUrl, '/services/data/', $ctx:uri.var.apiVersion, '/support/knowledgeArticles?', fn:substring($ctx:queryParams, 2))"/>
            </else>
        </filter>
        <property name="httpMethod" value="get"/>
        <salesforcerest.callWithRetry/>
    </sequence>
</template>

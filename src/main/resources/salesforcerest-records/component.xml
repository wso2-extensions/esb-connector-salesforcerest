<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<component name="salesforcerest-records" type="synapse/template">
    <subComponents>
        <component name="create">
            <displayName>Create</displayName>
            <file>create.xml</file>
            <description>Insert sObject(s) synapse library</description>
        </component>
        <component name="delete">
            <displayName>Delete</displayName>
            <file>delete.xml</file>
            <description>Delete sObject(s) synapse library</description>
        </component>
        <component name="getDeleted">
            <displayName>Get Deleted</displayName>
            <file>getDeleted.xml</file>
            <description>Retrieves the list of individual records that have been deleted within the given timespan for
                the specified object.
            </description>
        </component>
        <component name="getUpdated">
            <displayName>Get Updated</displayName>
            <file>getUpdated.xml</file>
            <description>Retrieves the list of individual records that have been updated within the given timespan for
                the specified object.
            </description>
        </component>
        <component name="update">
            <displayName>Update</displayName>
            <file>update.xml</file>
            <description>Update or update sObject(s) synapse library</description>
        </component>
        <component name="recentlyViewedItem">
            <displayName>Recently Viewed Item</displayName>
            <file>recentlyViewedItem.xml</file>
            <description>Gets the most recently accessed items that were viewed or referenced by the current user
            </description>
        </component>
        <component name="retrieveFieldValues">
            <displayName>Retrieve Field Values</displayName>
            <file>retrieveFieldValues.xml</file>
            <description>Retrieve specific field values from a record</description>
        </component>
        <component name="createMultipleRecords">
            <displayName>Create Multiple Records</displayName>
            <file>createMultipleRecords.xml</file>
            <description>Insert multiple sObject(s)</description>
        </component>
        <component name="createNestedRecords">
            <displayName>Create Nested Records</displayName>
            <file>createNestedRecords.xml</file>
            <description>Insert nested sObject(s)</description>
        </component>
        <component name="retrieveFieldValuesFromExternalObject">
            <displayName>Retrieve Field Values From External Object</displayName>
            <file>retrieveFieldValuesFromExternalObject.xml</file>
            <description>Retrieve specific field values from an External Object</description>
        </component>
        <component name="retrieveStandardFieldValuesFromExternalObjectWithExternalId">
            <displayName>Retrieve Standard Field Values From External Object With External ID</displayName>
            <file>retrieveStandardFieldValuesFromExternalObjectWithExternalId.xml</file>
            <description>Retrieve specific Standard field values from an External Object using External Id</description>
        </component>
        <component name="upsert">
            <displayName>Upsert</displayName>
            <file>upsert.xml</file>
            <description>Updating a record or Insert a new Record if there is no record associate with the Id using
                External ID.
            </description>
        </component>
        <component name="createUsingExternalId">
            <displayName>Create Using External ID</displayName>
            <file>createUsingExternalId.xml</file>
            <description>Creating a new record based on the field values included in the request body. This resource
                does not require the use of an external ID field.
            </description>
        </component>
        <component name="deleteUsingExternalId">
            <displayName>Delete Using External ID</displayName>
            <file>deleteUsingExternalId.xml</file>
            <description>Deleting a record based on the value of the specified external ID field.</description>
        </component>
        <component name="createUsingSpecificSObjectQuickAction">
            <displayName>Create Using Specific SObject Quick Action</displayName>
            <file>createUsingSpecificSObjectQuickAction.xml</file>
            <description>Creating a record via the specified quick action based on the field values included in the
                request body
            </description>
        </component>
        <component name="getRecordsUsingRelationships">
            <displayName>Get Records Using Relationships</displayName>
            <file>getRecordsUsingRelationships.xml</file>
            <description>Gets a record based on the specified object, record ID, and relationship field</description>
        </component>
        <component name="updateUsingRelationships">
            <displayName>Update Using Relationships</displayName>
            <file>updateUsingRelationships.xml</file>
            <description>Updates a parent record based on the specified object, record ID, and relationship field name
            </description>
        </component>
        <component name="deleteUsingRelationships">
            <displayName>Delete Using Relationships</displayName>
            <file>deleteUsingRelationships.xml</file>
            <description>Deletes a parent record based on the specified object, record ID, and relationship field name
            </description>
        </component>
        <component name="getObjectRecordCounts">
            <displayName>Get Object Record Counts</displayName>
            <file>getObjectRecordCounts.xml</file>
            <description>Lists information about object record counts in your organization.</description>
        </component>
        <component name="createUsingSObjectCollections">
            <displayName>Create Using SObject Collections</displayName>
            <file>createUsingSObjectCollections.xml</file>
            <description>Creates records using sObject collections. Can add up to 200 records</description>
        </component>
        <component name="deleteRecordsUsingSObjectCollections">
            <displayName>Delete Records Using SObject Collections</displayName>
            <file>deleteRecordsUsingSObjectCollections.xml</file>
            <description>Deletes records using sObject collections. Can delete up to 200 records</description>
        </component>
        <component name="getRecordsUsingSObjectCollections">
            <displayName>Get Records Using SObject Collections</displayName>
            <file>getRecordsUsingSObjectCollections.xml</file>
            <description>Gets one or more records of the same object type using sObject collections.</description>
        </component>
        <component name="getRecordsWithARequestBodyUsingSObjectCollections">
            <displayName>Get Records With A Request Body Using SObject Collections</displayName>
            <file>getRecordsWithARequestBodyUsingSObjectCollections.xml</file>
            <description>Gets one or more records of the same object type using sObject collections with a request
                body.
            </description>
        </component>
        <component name="updateRecordsUsingSObjectCollections">
            <displayName>Update Records Using SObject Collections</displayName>
            <file>updateRecordsUsingSObjectCollections.xml</file>
            <description>Updates records using sObject collections. Can update up to 200 records.</description>
        </component>
        <component name="upsertRecordsUsingSObjectCollections">
            <displayName>Upsert Records Using SObject Collections</displayName>
            <file>upsertRecordsUsingSObjectCollections.xml</file>
            <description>Either creates or updates (upsert) up to 200 records based on an external ID field using
                sObject collections
            </description>
        </component>
        <component name="createUsingQuickAction">
            <displayName>Create Using Quick Action</displayName>
            <file>createUsingQuickAction.xml</file>
            <description>Creates a record via a quick action.</description>
        </component>
    </subComponents>
</component>

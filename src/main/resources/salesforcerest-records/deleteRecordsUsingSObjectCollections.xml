<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright (c) 2023, WSO2 LLC (http://www.wso2.com) All Rights Reserved.

   WSO2 LLC licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template name="deleteRecordsUsingSObjectCollections" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="ids" description="A list of up to 200 IDs of objects to be deleted. The IDs can belong to different object types, including custom objects."/>
    <parameter name="allOrNone" description="Indicates whether to roll back the entire request when the deletion of any object fails (true) or to continue with the independent deletion of other objects in the request. The default is false."/>
    <parameter name="responseVariable" description="The name of the variable to which the response should be stored."/>
    <parameter name="overwriteBody" description="Replace the Message Body in Message Context with the response of the operation."/>
    <sequence>
        <filter source="boolean($func:allOrNone)" regex="true">
            <then>
                <property name="uri.var.callEndpointUri" expression="fn:concat($ctx:uri.var.apiUrl, '/services/data/', $ctx:uri.var.apiVersion, '/composite/sobjects?ids=', $func:ids, '&amp;allOrNone=', $func:allOrNone)"/>
            </then>
            <else>
                <property name="uri.var.callEndpointUri" expression="fn:concat($ctx:uri.var.apiUrl, '/services/data/', $ctx:uri.var.apiVersion, '/composite/sobjects?ids=', $func:ids)"/>
            </else>
        </filter>
        <property name="httpMethod" value="delete"/>
        <salesforcerest.callWithRetry/>
    </sequence>
</template>
